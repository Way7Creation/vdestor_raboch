<?php
// –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª debug.php –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
// –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: https://vdestor.ru/debug.php

echo "<h1>üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API VDestor</h1>";
echo "<style>body{font-family:Arial;} .ok{color:green;} .error{color:red;} .info{color:blue;} pre{background:#f5f5f5;padding:10px;}</style>";

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ autoloader
echo "<h2>1. Autoloader</h2>";
try {
    require_once __DIR__ . '/vendor/autoload.php';
    echo "<p class='ok'>‚úÖ Autoloader –∑–∞–≥—Ä—É–∂–µ–Ω</p>";
} catch (\Exception $e) {
    echo "<p class='error'>‚ùå –û—à–∏–±–∫–∞ autoloader: " . $e->getMessage() . "</p>";
    exit;
}

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Config
echo "<h2>2. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è</h2>";
try {
    $dbConfig = \App\Core\Config::get('database.mysql');
    if ($dbConfig) {
        echo "<p class='ok'>‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–∞</p>";
        echo "<p class='info'>Host: " . ($dbConfig['host'] ?? '–Ω–µ —É–∫–∞–∑–∞–Ω') . "</p>";
        echo "<p class='info'>Database: " . ($dbConfig['database'] ?? '–Ω–µ —É–∫–∞–∑–∞–Ω–∞') . "</p>";
    } else {
        echo "<p class='error'>‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>";
    }
} catch (\Exception $e) {
    echo "<p class='error'>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: " . $e->getMessage() . "</p>";
}

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
echo "<h2>3. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö</h2>";
try {
    $pdo = \App\Core\Database::getConnection();
    echo "<p class='ok'>‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ</p>";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    $stmt = $pdo->query("SHOW TABLES");
    $tables = $stmt->fetchAll(PDO::FETCH_COLUMN);
    echo "<p class='info'>–ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: " . count($tables) . "</p>";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã
    $stmt = $pdo->query("SELECT COUNT(*) FROM products");
    $productCount = $stmt->fetchColumn();
    echo "<p class='info'>–¢–æ–≤–∞—Ä–æ–≤ –≤ –ë–î: " . number_format($productCount) . "</p>";
    
} catch (\Exception $e) {
    echo "<p class='error'>‚ùå –û—à–∏–±–∫–∞ –ë–î: " . $e->getMessage() . "</p>";
}

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenSearch
echo "<h2>4. OpenSearch</h2>";
try {
    $client = \OpenSearch\ClientBuilder::create()->setHosts(['localhost:9200'])->build();
    $info = $client->info();
    echo "<p class='ok'>‚úÖ OpenSearch –ø–æ–¥–∫–ª—é—á–µ–Ω</p>";
    echo "<p class='info'>–í–µ—Ä—Å–∏—è: " . $info['version']['number'] . "</p>";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å
    try {
        $response = $client->count(['index' => 'products_current']);
        $docCount = $response['count'] ?? 0;
        echo "<p class='info'>–î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å–µ: " . number_format($docCount) . "</p>";
        
        if ($docCount == 0) {
            echo "<p class='error'>‚ö†Ô∏è –ò–Ω–¥–µ–∫—Å –ø—É—Å—Ç! –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é.</p>";
        }
    } catch (\Exception $e) {
        echo "<p class='error'>‚ùå –ò–Ω–¥–µ–∫—Å products_current –Ω–µ –Ω–∞–π–¥–µ–Ω</p>";
    }
    
} catch (\Exception $e) {
    echo "<p class='error'>‚ùå –û—à–∏–±–∫–∞ OpenSearch: " . $e->getMessage() . "</p>";
}

// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∞—Å—Å–æ–≤
echo "<h2>5. –ö–ª–∞—Å—Å—ã</h2>";
$classes = [
    'App\\Controllers\\ApiController',
    'App\\Controllers\\BaseController', 
    'App\\Services\\SearchService',
    'App\\Core\\Router'
];

foreach ($classes as $class) {
    if (class_exists($class)) {
        echo "<p class='ok'>‚úÖ {$class}</p>";
    } else {
        echo "<p class='error'>‚ùå {$class} –Ω–µ –Ω–∞–π–¥–µ–Ω</p>";
    }
}

// 6. –¢–µ—Å—Ç SearchService –Ω–∞–ø—Ä—è–º—É—é
echo "<h2>6. –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞</h2>";
try {
    $result = \App\Services\SearchService::search(['q' => 'test', 'limit' => 5]);
    
    if (isset($result['products'])) {
        echo "<p class='ok'>‚úÖ SearchService —Ä–∞–±–æ—Ç–∞–µ—Ç</p>";
        echo "<p class='info'>–ù–∞–π–¥–µ–Ω–æ: " . count($result['products']) . " —Ç–æ–≤–∞—Ä–æ–≤</p>";
        echo "<p class='info'>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: " . ($result['total'] ?? 0) . "</p>";
    } else {
        echo "<p class='error'>‚ùå SearchService –≤–µ—Ä–Ω—É–ª –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</p>";
        echo "<pre>" . print_r($result, true) . "</pre>";
    }
} catch (\Exception $e) {
    echo "<p class='error'>‚ùå –û—à–∏–±–∫–∞ SearchService: " . $e->getMessage() . "</p>";
    echo "<pre>" . $e->getTraceAsString() . "</pre>";
}

// 7. –¢–µ—Å—Ç —Ä–æ—É—Ç–µ—Ä–∞
echo "<h2>7. –†–æ—É—Ç–∏–Ω–≥</h2>";
echo "<p class='info'>Current URI: " . ($_SERVER['REQUEST_URI'] ?? '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω') . "</p>";
echo "<p class='info'>Request Method: " . ($_SERVER['REQUEST_METHOD'] ?? '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω') . "</p>";

// 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo "<h2>8. –õ–æ–≥–∏</h2>";
$logDir = '/var/www/www-root/data/logs';
if (is_dir($logDir)) {
    echo "<p class='ok'>‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>";
    $logFile = $logDir . '/app.log';
    if (file_exists($logFile)) {
        $lines = file($logFile);
        $recent = array_slice($lines, -10);
        echo "<p class='info'>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:</p>";
        echo "<pre>" . implode('', $recent) . "</pre>";
    } else {
        echo "<p class='info'>–õ–æ–≥ —Ñ–∞–π–ª –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω</p>";
    }
} else {
    echo "<p class='error'>‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>";
}

echo "<hr><p style='color: orange;'>‚ö†Ô∏è <strong>–í–∞–∂–Ω–æ:</strong> –£–¥–∞–ª–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ—Å–ª–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏!</p>";
?>