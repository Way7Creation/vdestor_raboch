<?php
require_once dirname(__DIR__) . '/vendor/autoload.php';

use App\Core\Bootstrap;
use OpenSearch\ClientBuilder;

Bootstrap::init();

$client = ClientBuilder::create()
    ->setHosts(['localhost:9200'])
    ->build();

$query = $_GET['q'] ?? '–≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å';
?>
<!DOCTYPE html>
<html>
<head>
    <title>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞ OpenSearch</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .section { margin: 20px 0; padding: 20px; background: #f5f5f5; border-radius: 8px; }
        pre { background: white; padding: 10px; overflow: auto; }
        .highlight { background: yellow; font-weight: bold; }
    </style>
</head>
<body>
    <h1>üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞ OpenSearch</h1>
    
    <form method="get">
        <input type="text" name="q" value="<?= htmlspecialchars($query) ?>" size="50">
        <button type="submit">–ò—Å–∫–∞—Ç—å</button>
    </form>
    
    <div class="section">
        <h2>1. –ê–Ω–∞–ª–∏–∑ —Ç–æ–∫–µ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞</h2>
        <?php
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å
            $analyzers = ['text_analyzer', 'code_analyzer', 'search_analyzer'];
            
            foreach ($analyzers as $analyzer) {
                echo "<h3>–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä: $analyzer</h3>";
                
                $response = $client->indices()->analyze([
                    'index' => 'products_current',
                    'body' => [
                        'analyzer' => $analyzer,
                        'text' => $query
                    ]
                ]);
                
                echo "<p>–¢–æ–∫–µ–Ω—ã: ";
                $tokens = array_map(function($t) { return $t['token']; }, $response['tokens']);
                echo "<code>" . implode(', ', $tokens) . "</code></p>";
            }
            
        } catch (\Exception $e) {
            echo "<p style='color:red'>–û—à–∏–±–∫–∞: " . $e->getMessage() . "</p>";
        }
        ?>
    </div>
    
    <div class="section">
        <h2>2. –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ match_all</h2>
        <?php
        try {
            // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–ª—É—á–∞–µ–º –ª—é–±—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤
            $response = $client->search([
                'index' => 'products_current',
                'body' => [
                    'size' => 5,
                    'query' => ['match_all' => new \stdClass()]
                ]
            ]);
            
            echo "<p>–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å–µ: <strong>" . number_format($response['hits']['total']['value']) . "</strong></p>";
            echo "<h3>–ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤:</h3>";
            
            foreach ($response['hits']['hits'] as $hit) {
                $product = $hit['_source'];
                echo "<div style='margin: 10px 0; padding: 10px; background: white;'>";
                echo "<strong>" . htmlspecialchars($product['name'] ?? '') . "</strong><br>";
                echo "–ê—Ä—Ç–∏–∫—É–ª: " . htmlspecialchars($product['external_id'] ?? '') . "<br>";
                echo "SKU: " . htmlspecialchars($product['sku'] ?? '') . "<br>";
                echo "–ë—Ä–µ–Ω–¥: " . htmlspecialchars($product['brand_name'] ?? '') . "<br>";
                echo "</div>";
            }
            
        } catch (\Exception $e) {
            echo "<p style='color:red'>–û—à–∏–±–∫–∞: " . $e->getMessage() . "</p>";
        }
        ?>
    </div>
    
    <div class="section">
        <h2>3. –ü–æ–∏—Å–∫ –ø–æ —Ç–æ—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é (term)</h2>
        <?php
        try {
            // –ü–æ–∏—Å–∫ –ø–æ —Ç–æ—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –≤ —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—è—Ö
            $fields = ['external_id.keyword', 'sku.keyword', 'name.keyword'];
            
            foreach ($fields as $field) {
                echo "<h3>–ü–æ–ª–µ: $field</h3>";
                
                $response = $client->search([
                    'index' => 'products_current',
                    'body' => [
                        'size' => 3,
                        'query' => [
                            'term' => [$field => $query]
                        ]
                    ]
                ]);
                
                if ($response['hits']['total']['value'] > 0) {
                    echo "<p>–ù–∞–π–¥–µ–Ω–æ: " . $response['hits']['total']['value'] . "</p>";
                    foreach ($response['hits']['hits'] as $hit) {
                        $product = $hit['_source'];
                        echo "<div style='background: #e0ffe0; padding: 5px; margin: 5px 0;'>";
                        echo htmlspecialchars($product['name'] ?? '') . " (ID: " . $product['product_id'] . ")";
                        echo "</div>";
                    }
                } else {
                    echo "<p>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>";
                }
            }
            
        } catch (\Exception $e) {
            echo "<p style='color:red'>–û—à–∏–±–∫–∞: " . $e->getMessage() . "</p>";
        }
        ?>
    </div>
    
    <div class="section">
        <h2>4. –ü–æ–∏—Å–∫ match –ø–æ —Ä–∞–∑–Ω—ã–º –ø–æ–ª—è–º</h2>
        <?php
        try {
            $fields = ['name', 'external_id', 'sku', 'description'];
            
            foreach ($fields as $field) {
                echo "<h3>–ü–æ–ª–µ: $field</h3>";
                
                $response = $client->search([
                    'index' => 'products_current',
                    'body' => [
                        'size' => 3,
                        'query' => [
                            'match' => [$field => $query]
                        ],
                        'highlight' => [
                            'fields' => [$field => new \stdClass()]
                        ]
                    ]
                ]);
                
                if ($response['hits']['total']['value'] > 0) {
                    echo "<p>–ù–∞–π–¥–µ–Ω–æ: " . $response['hits']['total']['value'] . "</p>";
                    foreach ($response['hits']['hits'] as $hit) {
                        $product = $hit['_source'];
                        echo "<div style='background: #ffe0e0; padding: 5px; margin: 5px 0;'>";
                        echo "<strong>" . htmlspecialchars($product['name'] ?? '') . "</strong><br>";
                        echo "–ê—Ä—Ç–∏–∫—É–ª: " . htmlspecialchars($product['external_id'] ?? '') . "<br>";
                        
                        if (isset($hit['highlight'][$field])) {
                            echo "–ü–æ–¥—Å–≤–µ—Ç–∫–∞: " . implode(' ... ', $hit['highlight'][$field]) . "<br>";
                        }
                        echo "</div>";
                    }
                } else {
                    echo "<p>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>";
                }
            }
            
        } catch (\Exception $e) {
            echo "<p style='color:red'>–û—à–∏–±–∫–∞: " . $e->getMessage() . "</p>";
        }
        ?>
    </div>
    
    <div class="section">
        <h2>5. Multi-match –ø–æ–∏—Å–∫ (–∫–∞–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–¥–µ)</h2>
        <?php
        try {
            $response = $client->search([
                'index' => 'products_current',
                'body' => [
                    'size' => 10,
                    'query' => [
                        'multi_match' => [
                            'query' => $query,
                            'fields' => [
                                'external_id^10',
                                'sku^8',
                                'name^5',
                                'brand_name^3',
                                'series_name^2',
                                'description'
                            ],
                            'type' => 'best_fields',
                            'fuzziness' => 'AUTO',
                            'prefix_length' => 2
                        ]
                    ],
                    '_source' => ['product_id', 'external_id', 'sku', 'name', 'brand_name'],
                    'explain' => true
                ]
            ]);
            
            echo "<p>–ù–∞–π–¥–µ–Ω–æ: <strong>" . $response['hits']['total']['value'] . "</strong></p>";
            
            foreach ($response['hits']['hits'] as $hit) {
                $product = $hit['_source'];
                echo "<div style='background: #e0e0ff; padding: 10px; margin: 10px 0;'>";
                echo "<strong>" . htmlspecialchars($product['name'] ?? '') . "</strong><br>";
                echo "–ê—Ä—Ç–∏–∫—É–ª: " . htmlspecialchars($product['external_id'] ?? '') . "<br>";
                echo "SKU: " . htmlspecialchars($product['sku'] ?? '') . "<br>";
                echo "–ë—Ä–µ–Ω–¥: " . htmlspecialchars($product['brand_name'] ?? '') . "<br>";
                echo "Score: " . $hit['_score'] . "<br>";
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º explain –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                if (isset($hit['_explanation'])) {
                    echo "<details>";
                    echo "<summary>–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏</summary>";
                    echo "<pre>" . json_encode($hit['_explanation'], JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>";
                    echo "</details>";
                }
                echo "</div>";
            }
            
        } catch (\Exception $e) {
            echo "<p style='color:red'>–û—à–∏–±–∫–∞: " . $e->getMessage() . "</p>";
        }
        ?>
    </div>
    
    <div class="section">
        <h2>6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–ø–ø–∏–Ω–≥–∞ –ø–æ–ª–µ–π</h2>
        <?php
        try {
            $mapping = $client->indices()->getMapping(['index' => 'products_current']);
            
            $properties = $mapping['products_current']['mappings']['properties'] ?? [];
            
            echo "<h3>–ü–æ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞:</h3>";
            echo "<pre>";
            foreach (['name', 'external_id', 'sku', 'description'] as $field) {
                if (isset($properties[$field])) {
                    echo "\n$field:\n";
                    echo json_encode($properties[$field], JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE);
                    echo "\n";
                }
            }
            echo "</pre>";
            
        } catch (\Exception $e) {
            echo "<p style='color:red'>–û—à–∏–±–∫–∞: " . $e->getMessage() . "</p>";
        }
        ?>
    </div>
</body>
</html>